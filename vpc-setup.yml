- hosts: localhost
  connection: local
  gather_facts: False
  tasks:
      # Import variables files module1
    - name: import vpc variable files
      include_vars: vars/vpc_setup
     
      #create vpc range module2
    - name: create vprofile vpc
      ec2_vpc_net:
        name: "{{ vpc_name }}"
        cidr_block: "{{ vpcCidr }}"
        region: "{{ region }}"
        dns_support: yes
        dns_hostnames: yes
        tenancy: default
        state: "{{ state }}"
      register: vpcout
    
    - debug:
        var: vpcout

    # module-3 : public subnet 1 creation
    - name: create pubic subnet in zone 1
      ec2_vpc_subnet: 
        vpc_id: "{{ vpcout.vpc.id }}"
        region: "{{ region }}"
        az: "{{ zone1 }}"
        state: "{{ state }}"
        cidr : "{{ Pubsub1Cidr }}"
        map_public: yes
        resource_tags:
            Name: vprofle-pubsub1
      register: pubsub1out
    
    #- debug:
        #var: pubsub1out

    # module-4 : public subnet 2 creation
    - name: create pubilc subnet in zone 2
      ec2_vpc_subnet: 
        vpc_id: "{{ vpcout.vpc.id }}"
        region: "{{ region }}"
        az: "{{ zone2 }}"
        state: "{{ state }}"
        cidr : "{{ Pubsub2Cidr }}"
        map_public: yes
        resource_tags:
            Name: vprofle-pubsub2
      register: pubsub2out
    
    #- debug:
        #var: pubsub2out
    
    # module-5 : public subnet 3 creation
    - name: create pubilc subnet in zone 3
      ec2_vpc_subnet: 
        vpc_id: "{{ vpcout.vpc.id }}"
        region: "{{ region }}"
        az: "{{ zone3 }}"
        state: "{{ state }}"
        cidr : "{{ Pubsub3Cidr }}"
        map_public: yes
        resource_tags:
            Name: vprofle-pubsub3
      register: pubsub3out
    
    #- debug:
        #var: pubsub3out

    # module-6 : private subnet 1 creation
    - name: create private subnet in zone 1
      ec2_vpc_subnet: 
        vpc_id: "{{ vpcout.vpc.id }}"
        region: "{{ region }}"
        az: "{{ zone1 }}"
        state: "{{ state }}"
        cidr : "{{ Prisub1Cidr }}"
        map_public: no
        resource_tags:
            Name: vprofle-prisub1
      register: prisub1out
    
    #- debug:
        #var: prisub1out

    # module-7 : private subnet 2 creation
    - name: create private subnet in zone 2
      ec2_vpc_subnet: 
        vpc_id: "{{ vpcout.vpc.id }}"
        region: "{{ region }}"
        az: "{{ zone2 }}"
        state: "{{ state }}"
        cidr : "{{ Prisub2Cidr }}"
        map_public: no
        resource_tags:
            Name: vprofle-prisub2
      register: prisub2out
    
    #- debug:
        #var: prisub2out

    # module-8 : private subnet 3 creation
    - name: create private subnet in zone 3
      ec2_vpc_subnet: 
        vpc_id: "{{ vpcout.vpc.id }}"
        region: "{{ region }}"
        az: "{{ zone3 }}"
        state: "{{ state }}"
        cidr : "{{ Prisub3Cidr }}"
        map_public: no
        resource_tags:
            Name: vprofle-prisub3
      register: prisub3out
    
    #- debug:
        #var: prisub3out

    # module-9 : internet gateway creation for pub subnet
    - name: internet gateway setup
      ec2_vpc_igw:
        vpc_id: "{{ vpcout.vpc.id }}"
        region: "{{ region }}"
        state: "{{ state }}"
        resource_tags:
            Name: vprofle-IGW
      register: IGWout
    #- debug:
        #var: IGWout
    
    - name: Set up public subnet route table
      ec2_vpc_route_table:
        vpc_id: "{{ vpcout.vpc.id }}"
        region: "{{ region }}"
        resource_tags:
            Name: vprofle-RT
        subnets:
        - "{{ pubsub1out.subnet.id }}"
        - "{{ pubsub2out.subnet.id }}"
        - "{{ pubsub3out.subnet.id }}"
        routes:
        - dest: 0.0.0.0/0
          gateway_id: "{{ IGWout.gateway_id }}"
      register: pubRTout